syntax = "proto3";

package entryfy.org.api.v1;
import "google/protobuf/timestamp.proto";
import "entities.proto";

//option go_package = "github.com/entryfy/org/api/v1;org-api";
option java_multiple_files = true;
option java_package = "com.entryfy.org.api.v1";
option csharp_namespace = "Entryfy.Org.Api.V1";
option ruby_package = "Entryfy::Org::Api::V1";

service AccessesService {
    rpc GetAccesses (GetAccessesRequest) returns (GetAccessesResponse) {
    }
    rpc CreateAccesses (CreateAccessesRequest) returns (CreateAccessesResponse) {
    }
    rpc UpdateAccesses (UpdateAccessesRequest) returns (UpdateAccessesResponse) {
    }
    rpc DeleteAccesses (DeleteAccessesRequest) returns (DeleteAccessesResponse) {
    }
}

message GetAccessesRequest {
    string organization_slug = 1;
    repeated string uuids = 2; // Send empty array to get all organization  accesses
}

message GetAccessesResponse {
    repeated Access accesses = 1;
}

message AccessUserContainer {
    string user_uuid = 1;
}

message AccessDoorContainer {
    string security_device_uuid = 1;
    bool lock_unlock_enabled = 2;
    repeated string in_auth_types = 3;
    repeated string out_auth_types = 4;
}

message AccessBody {
    string uuid = 1; // Would be autogenerated on create if not set
    string name = 2;
    enum Kind {
        KIND_UNSPECIFIED = 0;
        KIND_PERMANENT = 1;
        KIND_TEMPORARY = 2;
    }
    Kind kind = 3;
    map<string, string> preferences = 4;
    google.protobuf.Timestamp valid_from = 5;
    google.protobuf.Timestamp valid_to = 6;
    string schedule_definition = 7;
    string schedule_exception_definition = 8;
    repeated Guest guests = 9;
    repeated AccessDoorContainer doors = 10;
    repeated AccessUserContainer users = 11;
    bool welcome_email_required = 12;
}

message CreateAccessesRequest {
    string organization_slug = 1;
    repeated AccessBody access_bodies = 2;
}

message CreateAccessesResponse {
    repeated BizOperation biz_operations = 1;
}

message UpdateAccessesRequest {
    string organization_slug = 1;
    repeated AccessBody access_bodies = 2;
}

message UpdateAccessesResponse {
    repeated BizOperation biz_operations = 1;
}

message DeleteAccessesRequest {
    string organization_slug = 1;
    repeated string uuids = 2;
}

message DeleteAccessesResponse {
    repeated BizOperation biz_operations = 1;
}
